[gd_scene load_steps=29 format=2]

[ext_resource path="res://art/dark.png" type="Texture" id=1]
[ext_resource path="res://art/skellingtorn.png" type="Texture" id=2]
[ext_resource path="res://addons/moe.ero-one.fsm/content/fsm.gd" type="Script" id=3]
[ext_resource path="res://addons/moe.ero-one.fsm/assets/ico2d.png" type="Texture" id=4]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Patrolling/Patrolling.tscn" type="PackedScene" id=5]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Idle/Idle.tscn" type="PackedScene" id=6]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Falling/Falling.tscn" type="PackedScene" id=7]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Reversing/Reversing.tscn" type="PackedScene" id=8]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Aggro/Aggro.tscn" type="PackedScene" id=9]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Hitting/Hitting.tscn" type="PackedScene" id=10]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Wandering/Wandering.tscn" type="PackedScene" id=11]
[ext_resource path="res://Characters/Mob/FSM-mob/states/Dying/Dying.tscn" type="PackedScene" id=12]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_landed/on_landed.tscn" type="PackedScene" id=13]
[ext_resource path="res://Characters/Player/FSM/transitions/on_landed/on_landed.gd" type="Script" id=14]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_left_ground/on_left_ground.tscn" type="PackedScene" id=15]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_collision/on_collision.tscn" type="PackedScene" id=16]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_path_clear/on_path_clear.tscn" type="PackedScene" id=17]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_saw_player/on_saw_player.tscn" type="PackedScene" id=18]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_aggro_expired/on_aggro_expired.tscn" type="PackedScene" id=19]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_hit/on_hit.tscn" type="PackedScene" id=20]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_hit_complete/on_hit_complete.tscn" type="PackedScene" id=21]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_stuck/on_stuck.tscn" type="PackedScene" id=22]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_wander_done/on_wander_done.tscn" type="PackedScene" id=23]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_near_edge/on_near_edge.tscn" type="PackedScene" id=24]
[ext_resource path="res://Characters/Mob/FSM-mob/transitions/on_death/on_death.tscn" type="PackedScene" id=25]

[sub_resource type="GDScript" id=1]

script/source = "extends \"res://Character.gd\"

var Heart = load(\"res://Heart.tscn\")

signal die
signal aggro
signal calm

var target_in_range = false
var can_see_target = false
var aggro_exhausted = true
var original_max_speed
var original_walk_accel
var is_hit = false
var is_dying = false
var edge_count = 0
var mob_seen_count = 0

export (int) var FOV = 45
export (int) var sight_radius = 150

onready var target = get_parent().get_node(\"Player\")
onready var edge_ray = get_node(\"edge_ray\")

func _ready():
    if target == null: target = self
    walk_accel = 5
    max_walk_speed = 50
    original_max_speed = max_walk_speed
    original_walk_accel = walk_accel
    if (randi() % 2 == 1):
        reverse_facing()

func _physics_process(delta):
    assert not (is_dying and not is_hit)
    check_in_bounds()
    check_target_visibility()

func check_target_visibility():    
    var vec_to_target = target.global_position - global_position
    var distance_to_target = vec_to_target.length()
    var target_dot = vec_to_target.normalized().dot(facing_normal)
    if distance_to_target <= sight_radius and target_dot > 0:
        var space_state = get_world_2d().direct_space_state
        var result = space_state.intersect_ray(global_position, target.global_position, [self])
        if result:
            can_see_target = (result.collider == target)
            if result.collider.is_in_group(\"mobs\"):
                mob_seen_count +=1
                edge_count += 2
                
        
func get_state():
    return $FSM2D.current_state_ID
    
        
func check_in_bounds():
    if out_of_bounds():
        emit_signal(\"die\")
        queue_free()
        
func is_on_screen():
    return $VisibilityNotifier2D.is_on_screen()
    
func out_of_bounds():
    return (global_position.x < 0 or\\
        global_position.x > 640 or\\
        global_position.y < 0)
        
func die():
    audio_player.stream = load(\"res://audio/sounds/die.wav\")
    audio_player.play()
    var parent = get_parent().get_parent()
    emit_signal(\"die\",self)
    visible = false
    set_collision_layer_bit(1,false)
    var heart = Heart.instance()
    heart.global_position = global_position + (facing_normal * 16)
    heart.apply_impulse(Vector2(),facing_normal * 300)
    parent.call_deferred(\"add_child\",heart)
    heart.connect(\"caught\",parent,\"_on_heart_caught\")
    yield(audio_player,\"finished\")
    queue_free()

func hit(body):
    is_hit = true
    

func _on_Lifespan_timeout():
    if is_on_screen():
        yield($VisibilityNotifier2D,\"screen_exited\")
        print(\"death delayed because visible\")
    emit_signal(\"die\",self)
    print(\"died offscreen\")
    queue_free()
    
func check_ahead():
    var test_motion = 5 * facing_normal
    return test_move(transform, test_motion)
    
func is_near_edge():
    return not edge_ray.is_colliding()
    
func reverse_facing():
    edge_ray.position *= Vector2(-1,1)
    .reverse_facing()

func start_aggro():
    emit_signal(\"aggro\")
    audio_player.stream = load(\"res://audio/sounds/ugh.wav\")
    audio_player.play()
    max_walk_speed *= 3
    walk_accel *= 2
    aggro_exhausted = false
    modulate = Color(1,.7,.7,1)
    $AggroTimer.start()
    
func end_aggro():
    emit_signal(\"calm\")
    $AggroTimer.stop()
    max_walk_speed = original_max_speed
    walk_accel = original_walk_accel
    aggro_exhausted = true
    modulate = Color(1,1,1,1)

func _on_AggroTimer_timeout():
    end_aggro()

func set_label(text):
    $Label.text = text

func _on_StuckTimer_timeout():
    edge_count = 0
"

[sub_resource type="RectangleShape2D" id=2]

custom_solver_bias = 0.0
extents = Vector2( 6, 12 )

[sub_resource type="Animation" id=3]

resource_name = "Idle"
length = 7.0
loop = true
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2, 3, 4, 5, 6, 7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 1, 2, 3, 4, 5, 1 ]
}

[node name="Mob" type="KinematicBody2D" index="0" groups=[
"mobs",
]]

position = Vector2( 0.06884, 0 )
z_index = 1
input_pickable = false
collision_layer = 2
collision_mask = 0
collision/safe_margin = 0.01
script = SubResource( 1 )
_sections_unfolded = [ "Collision", "Transform", "Z Index", "collision" ]
FOV = 40
sight_radius = 100

[node name="Light2D" type="Light2D" parent="." index="0"]

visible = false
enabled = true
editor_only = false
texture = ExtResource( 1 )
offset = Vector2( 0, -8 )
texture_scale = 0.07
color = Color( 0.268583, 0.777344, 0.162991, 1 )
energy = 1.0
mode = 0
range_height = 0.0
range_z_min = -1024
range_z_max = 1024
range_layer_min = 0
range_layer_max = 0
range_item_cull_mask = 1
shadow_enabled = true
shadow_color = Color( 0, 0, 0, 0 )
shadow_buffer_size = 2048
shadow_gradient_length = 0.0
shadow_filter = 0
shadow_filter_smooth = 0.0
shadow_item_cull_mask = 1
_sections_unfolded = [ "Shadow" ]

[node name="Sprite" type="Sprite" parent="." index="1"]

light_mask = 3
texture = ExtResource( 2 )
hframes = 7
frame = 2
_sections_unfolded = [ "Animation", "Transform", "Visibility" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="2"]

shape = SubResource( 2 )

[node name="edge_ray" type="RayCast2D" parent="." index="3"]

position = Vector2( 10, 12 )
enabled = true
exclude_parent = true
cast_to = Vector2( 0, 4 )
collision_mask = 7
_sections_unfolded = [ "Transform", "Z Index" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="." index="4"]

root_node = NodePath("..")
autoplay = "Idle"
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 7.0
anims/Idle = SubResource( 3 )
blend_times = [  ]
_sections_unfolded = [ "Playback Options" ]

[node name="Lifespan" type="Timer" parent="." index="5"]

process_mode = 0
wait_time = 20.0
one_shot = false
autostart = true

[node name="AggroTimer" type="Timer" parent="." index="6"]

process_mode = 0
wait_time = 2.0
one_shot = false
autostart = false

[node name="StuckTimer" type="Timer" parent="." index="7"]

process_mode = 1
wait_time = 5.0
one_shot = false
autostart = true

[node name="IFrameTimer" type="Timer" parent="." index="8"]

process_mode = 0
wait_time = 1.0
one_shot = false
autostart = false

[node name="FSM2D" type="Node2D" parent="." index="9"]

editor/display_folded = true
script = ExtResource( 3 )
_sections_unfolded = [ "Create new:" ]
__meta__ = {
"_editor_icon": ExtResource( 4 )
}
logic_root_path = NodePath("..")
only_active_state_on_scene = false
init_manually = false
update_mode = 2
receive_signals_only_on_activated_items = false
debug_enabled = false
"Initial state:" = "Idle"
"Create new:/Subdirectory for FSM nodes:" = "FSM-mob"
"Create new:/Create state with name:" = null
"Create new:/Create transition with name:" = null
GraphData = {
"Aggro": Vector2( 1375, 510 ),
"Aggro_": Vector2( 1375, 510 ),
"Aggro__": Vector2( 1506, 338 ),
"Dying": Vector2( 1820, 646 ),
"Dying_": Vector2( 1820, 646 ),
"Falling": Vector2( 216, 293 ),
"Falling_": Vector2( 216, 293 ),
"Falling__": Vector2( 216, 293 ),
"Hitting": Vector2( 1564, 414 ),
"Hitting_": Vector2( 1564, 414 ),
"Hitting__": Vector2( 1653, 425 ),
"Idle": Vector2( 1207, 75 ),
"Idle2": Vector2( 627, 210 ),
"Idle2_": Vector2( 627, 210 ),
"Idle2__": Vector2( 627, 210 ),
"Idle_": Vector2( 1207, 75 ),
"Idle__": Vector2( 1207, 75 ),
"Patrolling": Vector2( 905, 512 ),
"Patrolling_": Vector2( 905, 512 ),
"Patrolling__": Vector2( 905, 512 ),
"Peef_": Vector2( 1519, 936 ),
"Peef__": Vector2( 1519, 936 ),
"Reversing": Vector2( 833, 1098 ),
"Reversing_": Vector2( 833, 1098 ),
"Reversing__": Vector2( 829, 1028 ),
"Wandering": Vector2( 412, 1277 ),
"Wandering_": Vector2( 412, 1277 ),
"Wandering__": Vector2( 421, 1271 ),
"on_aggro_expired": Vector2( 1294, 219 ),
"on_aggro_expired_": Vector2( 1294, 219 ),
"on_aggro_expired__": Vector2( 1426, 133 ),
"on_collision": Vector2( 518, 883 ),
"on_collision2_": Vector2( 191, 47 ),
"on_collision2__": Vector2( 191, 47 ),
"on_collision_": Vector2( 518, 883 ),
"on_collision__": Vector2( 570, 938 ),
"on_death": Vector2( 1840, 435 ),
"on_death_": Vector2( 1840, 435 ),
"on_death__": Vector2( 1804, 543 ),
"on_hit": Vector2( 1778, 1251 ),
"on_hit_": Vector2( 1778, 1251 ),
"on_hit__": Vector2( 1639, 865 ),
"on_hit_complete": Vector2( 1751, 50 ),
"on_hit_complete_": Vector2( 1751, 50 ),
"on_hit_complete__": Vector2( 1751, 50 ),
"on_landed": Vector2( 540, 292 ),
"on_landed_": Vector2( 540, 292 ),
"on_landed__": Vector2( 540, 292 ),
"on_left_ground": Vector2( 209, 595 ),
"on_left_ground_": Vector2( 209, 595 ),
"on_left_ground__": Vector2( 209, 595 ),
"on_near_edge": Vector2( 1106, 952 ),
"on_near_edge_": Vector2( 1106, 952 ),
"on_near_edge__": Vector2( 1089, 866 ),
"on_path_clear": Vector2( 880, 871 ),
"on_path_clear_": Vector2( 880, 871 ),
"on_path_clear__": Vector2( 847, 836 ),
"on_saw_player": Vector2( 1034, 351 ),
"on_saw_player_": Vector2( 1034, 351 ),
"on_saw_player__": Vector2( 1147, 309 ),
"on_stuck": Vector2( 1492, 1151 ),
"on_stuck_": Vector2( 1492, 1151 ),
"on_stuck__": Vector2( 1496, 1145 ),
"on_wander_done": Vector2( 63, 921 ),
"on_wander_done_": Vector2( 63, 921 ),
"on_wander_done__": Vector2( 259, 886 )
}

[node name="States" type="Node2D" parent="FSM2D" index="0"]

[node name="Patrolling" parent="FSM2D/States" index="0" instance=ExtResource( 5 )]

[node name="Idle" parent="FSM2D/States" index="1" instance=ExtResource( 6 )]

[node name="Falling" parent="FSM2D/States" index="2" instance=ExtResource( 7 )]

[node name="Reversing" parent="FSM2D/States" index="3" instance=ExtResource( 8 )]

[node name="Aggro" parent="FSM2D/States" index="4" instance=ExtResource( 9 )]

[node name="Hitting" parent="FSM2D/States" index="5" instance=ExtResource( 10 )]

[node name="Wandering" parent="FSM2D/States" index="6" instance=ExtResource( 11 )]

[node name="Dying" parent="FSM2D/States" index="7" instance=ExtResource( 12 )]

[node name="Transitions" type="Node2D" parent="FSM2D" index="1"]

[node name="on_landed" parent="FSM2D/Transitions" index="0" instance=ExtResource( 13 )]

script = ExtResource( 14 )
path2SourceStates = [ NodePath(""), NodePath("../../States/Falling"), NodePath("../../States/Idle") ]
path2Target_state = NodePath("../../States/Patrolling")

[node name="on_left_ground" parent="FSM2D/Transitions" index="1" instance=ExtResource( 15 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Idle"), NodePath("../../States/Patrolling"), NodePath("../../States/Wandering") ]
path2Target_state = NodePath("../../States/Falling")

[node name="on_collision" parent="FSM2D/Transitions" index="2" instance=ExtResource( 16 )]

path2SourceStates = [ NodePath("../../States/Patrolling"), NodePath("../../States/Wandering") ]
path2Target_state = NodePath("../../States/Reversing")
intervalBetweenChecks = 0.1

[node name="on_path_clear" parent="FSM2D/Transitions" index="3" instance=ExtResource( 17 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Reversing") ]
path2Target_state = NodePath("../../States/Patrolling")

[node name="on_saw_player" parent="FSM2D/Transitions" index="4" instance=ExtResource( 18 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Patrolling") ]
path2Target_state = NodePath("../../States/Aggro")

[node name="on_aggro_expired" parent="FSM2D/Transitions" index="5" instance=ExtResource( 19 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Aggro") ]
path2Target_state = NodePath("../../States/Idle")

[node name="on_hit" parent="FSM2D/Transitions" index="6" instance=ExtResource( 20 )]

path2SourceStates = [ NodePath("../../States/Patrolling"), NodePath("../../States/Aggro"), NodePath("../../States/Wandering") ]
path2Target_state = NodePath("../../States/Hitting")

[node name="on_hit_complete" parent="FSM2D/Transitions" index="7" instance=ExtResource( 21 )]

path2SourceStates = [ NodePath("../../States/Hitting") ]
path2Target_state = NodePath("../../States/Idle")

[node name="on_stuck" parent="FSM2D/Transitions" index="8" instance=ExtResource( 22 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Patrolling"), NodePath("../../States/Wandering") ]
path2Target_state = NodePath("../../States/Wandering")

[node name="on_wander_done" parent="FSM2D/Transitions" index="9" instance=ExtResource( 23 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Wandering") ]
path2Target_state = NodePath("../../States/Patrolling")

[node name="on_near_edge" parent="FSM2D/Transitions" index="10" instance=ExtResource( 24 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Patrolling") ]
path2Target_state = NodePath("../../States/Reversing")

[node name="on_death" parent="FSM2D/Transitions" index="11" instance=ExtResource( 25 )]

path2SourceStates = [ NodePath(""), NodePath("../../States/Hitting") ]
path2Target_state = NodePath("../../States/Dying")

[node name="Label" type="Label" parent="." index="10"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 40.0
margin_bottom = 14.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="." index="11"]

stream = null
volume_db = 0.0
pitch_scale = 1.0
autoplay = false
max_distance = 2000.0
attenuation = 1.0
bus = "Master"
area_mask = 1

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="." index="12"]

rect = Rect2( -10, -10, 20, 20 )

[connection signal="timeout" from="Lifespan" to="." method="_on_Lifespan_timeout"]

[connection signal="timeout" from="AggroTimer" to="." method="_on_AggroTimer_timeout"]

[connection signal="timeout" from="StuckTimer" to="." method="_on_StuckTimer_timeout"]

[connection signal="timeout" from="IFrameTimer" to="." method="_on_IFrameTimer_timeout"]


